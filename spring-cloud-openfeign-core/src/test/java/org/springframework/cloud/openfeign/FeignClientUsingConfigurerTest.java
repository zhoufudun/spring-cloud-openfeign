/*
 * Copyright 2013-2022 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.springframework.cloud.openfeign;

import java.lang.reflect.Field;
import java.util.List;

import feign.*;
import feign.micrometer.MicrometerCapability;
import org.junit.Test;
import org.junit.runner.RunWith;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;
import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.cloud.openfeign.clientconfig.FeignClientConfigurer;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.test.annotation.DirtiesContext;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.util.ReflectionUtils;

import static org.assertj.core.api.Assertions.assertThat;

/**
 * @author matt king
 * @author Jonatan Ivanov
 */
@DirtiesContext
@RunWith(SpringJUnit4ClassRunner.class)
@SpringBootTest(classes = FeignClientUsingConfigurerTest.Application.class, value = {
		"feign.client.config.default.loggerLevel=full",
		"feign.client.config.default.requestInterceptors[0]=org.springframework.cloud.openfeign.FeignClientUsingPropertiesTests.FooRequestInterceptor",
		"feign.client.config.default.requestInterceptors[1]=org.springframework.cloud.openfeign.FeignClientUsingPropertiesTests.BarRequestInterceptor" })
public class FeignClientUsingConfigurerTest {

	private static final String BEAN_NAME_PREFIX = "org.springframework.cloud.openfeign.FeignClientUsingConfigurerTest$";

	@Autowired
	private ConfigurableListableBeanFactory beanFactory;

	@Autowired
	private FeignContext context;

	@Test
	public void testFeignClient() {
		FeignClientFactoryBean factoryBean = (FeignClientFactoryBean) beanFactory // FeignClientFactoryBean{type=interface org.springframework.cloud.openfeign.FeignClientUsingConfigurerTest$TestFeignClient, name='testFeignClient', url='null', path='null', decode404=false, inheritParentContext=true, applicationContext=null, beanFactory=org.springframework.beans.factory.support.DefaultListableBeanFactory@1ee29c84: defining beans [org.springframework.boot.test.mock.mockito.MockitoPostProcessor$SpyPostProcessor,org.springframework.boot.test.mock.mockito.MockitoPostProcessor,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,feignClientUsingConfigurerTest.Application,org.springframework.boot.autoconfigure.internalCachingMetadataReaderFactory,requestInterceptor,noOpCapability,org.springframework.boot.autoconfigure.AutoConfigurationPackages,default.org.springframework.cloud.openfeign.FeignClientUsingConfigurerTest.FeignClientSpecification,testFeignClient.FeignClientSpecification,org.springframework.cloud.openfeign.FeignClientUsingConfigurerTest$TestFeignClient,noInheritFeignClient.FeignClientSpecification,org.springframework.cloud.openfeign.FeignClientUsingConfigurerTest$NoInheritFeignClient,org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration,propertySourcesPlaceholderConfigurer,org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$TomcatWebSocketConfiguration,websocketServletWebServerCustomizer,org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration,org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedTomcat,tomcatServletWebServerFactory,org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration,servletWebServerFactoryCustomizer,tomcatServletWebServerFactoryCustomizer,org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor,org.springframework.boot.context.internalConfigurationPropertiesBinderFactory,org.springframework.boot.context.internalConfigurationPropertiesBinder,org.springframework.boot.context.properties.BoundConfigurationProperties,org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar.methodValidationExcludeFilter,server-org.springframework.boot.autoconfigure.web.ServerProperties,webServerFactoryCustomizerBeanPostProcessor,errorPageRegistrarBeanPostProcessor,org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration,dispatcherServlet,spring.mvc-org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties,org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration,dispatcherServletRegistration,org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration,org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration,standardJacksonObjectMapperBuilderCustomizer,spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties,org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration,jacksonObjectMapperBuilder,org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration,parameterNamesModule,org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration,jacksonObjectMapper,org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration,jsonComponentModule,org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration,defaultCodecCustomizer,org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration,jacksonCodecCustomizer,org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration,spring.codec-org.springframework.boot.autoconfigure.codec.CodecProperties,org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration,taskExecutorBuilder,applicationTaskExecutor,spring.task.execution-org.springframework.boot.autoconfigure.task.TaskExecutionProperties,org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration,error,beanNameViewResolver,org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration,conventionErrorViewResolver,spring.web-org.springframework.boot.autoconfigure.web.WebProperties,spring.resources-org.springframework.boot.autoconfigure.web.ResourceProperties,org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration,errorAttributes,basicErrorController,errorPageCustomizer,preserveErrorControllerTargetClassPostProcessor,org.springframework.boot.autoconfigure.security.oauth2.client.OAuth2RestOperationsConfiguration,org.springframework.boot.autoconfigure.security.oauth2.OAuth2AutoConfiguration,resourceServerProperties,security.oauth2.client-org.springframework.boot.autoconfigure.security.oauth2.OAuth2ClientProperties,security.oauth2.client-org.springframework.boot.autoconfigure.security.oauth2.client.ClientProperties,org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration,requestMappingHandlerAdapter,requestMappingHandlerMapping,welcomePageHandlerMapping,localeResolver,themeResolver,flashMapManager,mvcConversionService,mvcValidator,mvcContentNegotiationManager,mvcPatternParser,mvcUrlPathHelper,mvcPathMatcher,viewControllerHandlerMapping,beanNameHandlerMapping,routerFunctionMapping,resourceHandlerMapping,mvcResourceUrlProvider,defaultServletHandlerMapping,handlerFunctionAdapter,mvcUriComponentsContributor,httpRequestHandlerAdapter,simpleControllerHandlerAdapter,handlerExceptionResolver,mvcViewResolver,mvcHandlerMappingIntrospector,viewNameTranslator,org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter,defaultViewResolver,viewResolver,requestContextFilter,org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration,formContentFilter,org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration,applicationAvailability,org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration,org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshScopeBeanDefinitionEnhancer,org.springframework.cloud.autoconfigure.RefreshAutoConfiguration,refreshScope,loggingRebinder,configDataContextRefresher,refreshEventListener,spring.cloud.refresh-org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties,org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration,healthStatusAggregator,healthHttpCodeStatusMapper,healthEndpointGroups,healthContributorRegistry,healthEndpoint,healthEndpointGroupsBeanPostProcessor,org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration,reactiveHealthContributorRegistry,org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration,healthEndpointWebExtension,org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration,management.endpoint.health-org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties,org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration,spring.info-org.springframework.boot.autoconfigure.info.ProjectInfoProperties,org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration,envInfoContributor,management.info-org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties,org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration,infoEndpoint,org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration,servletWebChildContextFactory,managementServletContext,org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration,endpointOperationParameterMapper,endpointCachingOperationInvokerAdvisor,org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration,servletEndpointDiscoverer,org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration,webEndpointPathMapper,endpointMediaTypes,webEndpointDiscoverer,controllerEndpointDiscoverer,pathMappedEndpoints,webExposeExcludePropertyEndpointFilter,controllerExposeExcludePropertyEndpointFilter,management.endpoints.web-org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties,org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration,environmentManager,org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration,diskSpaceHealthIndicator,management.health.diskspace-org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties,org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration,pingHealthContributor,org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration,micrometerClock,meterRegistryPostProcessor,propertiesMeterFilter,management.metrics-org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties,org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration,simpleMeterRegistry,simpleConfig,management.metrics.export.simple-org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties,org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration,org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration,jvmGcMetrics,jvmMemoryMetrics,jvmThreadMetrics,classLoaderMetrics,org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration,logbackMetrics,org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration,uptimeMetrics,processorMetrics,fileDescriptorMetrics,org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration,org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration,stringHttpMessageConverter,org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration,mappingJackson2HttpMessageConverter,org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration,org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration,messageConverters,org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration,restTemplateBuilderConfigurer,restTemplateBuilder,org.springframework.boot.actuate.autoconfigure.metrics.web.client.RestTemplateMetricsConfiguration,restTemplateExchangeTagsProvider,metricsRestTemplateCustomizer,org.springframework.boot.actuate.autoconfigure.metrics.web.client.WebClientMetricsConfiguration,defaultWebClientExchangeTagsProvider,metricsWebClientCustomizer,org.springframework.boot.actuate.autoconfigure.metrics.web.client.HttpClientMetricsAutoConfiguration,metricsHttpClientUriTagFilter,org.springframework.boot.actuate.autoconfigure.metrics.web.servlet.WebMvcMetricsAutoConfiguration,webMvcTagsProvider,webMvcMetricsFilter,metricsHttpServerUriTagFilter,metricsWebMvcConfigurer,org.springframework.boot.actuate.autoconfigure.metrics.web.tomcat.TomcatMetricsAutoConfiguration,tomcatMetricsBinder,org.springframework.boot.actuate.autoconfigure.security.servlet.ManagementWebSecurityAutoConfiguration,managementSecurityFilterChain,org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration$SpringMvcConfiguration,dispatcherServletMappingDescriptionProvider,org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration,servletMappingDescriptionProvider,filterMappingDescriptionProvider,org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration,org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration,org.springframework.boot.autoconfigure.aop.AopAutoConfiguration,org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration,org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration,lifecycleProcessor,spring.lifecycle-org.springframework.boot.autoconfigure.context.LifecycleProperties,org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration,persistenceExceptionTranslationPostProcessor,org.springframework.hateoas.mediatype.hal.HalMediaTypeConfiguration,halLinkDisocoverer,org.springframework.hateoas.config.WebTestHateoasConfiguration,webTestClientConfigurer,org.springframework.hateoas.config.HateoasConfiguration,messageResolver,hypermediaWebMvcConverters,defaultRelProvider,annotationRelProvider,_relProvider,relProviderPluginRegistry,linkDiscoverers,linkDiscovererRegistry,org.springframework.hateoas.config.WebMvcEntityLinksConfiguration,webMvcEntityLinks,entityLinksPluginRegistry,delegatingEntityLinks,org.springframework.hateoas.config.WebMvcHateoasConfiguration,hypermediaWebMvcConfigurer,representationModelProcessorInvoker,hypermediaRepresentionModelProcessorConfigurator,webMvcLinkBuilderFactory,org.springframework.hateoas.config.RestTemplateHateoasConfiguration,hypermediaRestTemplateBeanPostProcessor,hypermediaRestTemplateConfigurer,org.springframework.hateoas.config.WebFluxHateoasConfiguration,hypermediaConverters,hypermediaWebFluxConfigurer,serverWebExchangeContextFilter,org.springframework.hateoas.config.WebClientHateoasConfiguration,webClientConfigurer,webClientBeanPostProcessor,org.springframework.data.rest.webmvc.RestControllerConfiguration,repositoryController,repositoryEntityController,repositoryPropertyReferenceController,repositorySearchController,repositorySchemaController,alpsController,profileController,org.springframework.data.web.config.SpringDataJacksonConfiguration,jacksonGeoModule,org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration,configurerDelegate,repositories,repositoryRelProvider,persistentEntities,defaultConversionService,validatingRepositoryEventListener,jpaHelper,repositoryRestConfiguration,projectionDefinitionRegistrar,metadataConfiguration,baseUri,annotatedEventHandlerInvoker,serverHttpRequestMethodArgumentResolver,repoRequestArgumentResolver,resourceMetadataHandlerMethodArgumentResolver,backendIdHandlerMethodArgumentResolver,eTagArgumentResolver,entityLinks,persistentEntityArgumentResolver,jsonSchemaConverter,jacksonHttpMessageConverter,halJacksonHttpMessageConverter,uriListHttpMessageConverter,repositoryExporterHandlerAdapter,restHandlerMapping,resourceMappings,linkCollector,excerptProjector,repositoryRestExceptionHandler,repositoryInvokerFactory,defaultMessageConverters,alpsJsonHttpMessageConverter,pageableResolver,sortResolver,backendIdConverterRegistry,auditableBeanWrapperFactory,httpHeadersPreparer,selfLinkProvider,associationLinks,enumTranslator,alpsConverter,profileResourceProcessor,pagedResourcesAssembler,pagedResourcesAssemblerArgumentResolver,org.springframework.boot.autoconfigure.data.rest.RepositoryRestMvcAutoConfiguration,springBootRepositoryRestConfigurer,spring.data.rest-org.springframework.boot.autoconfigure.data.rest.RepositoryRestProperties,org.springframework.boot.autoconfigure.hateoas.HypermediaHttpMessageConverterConfiguration,halMessageConverterSupportedMediaTypeCustomizer,org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration,spring.hateoas-org.springframework.boot.autoconfigure.hateoas.HateoasProperties,org.springframework.boot.autoconfigure.security.reactive.ReactiveSecurityAutoConfiguration,spring.security-org.springframework.boot.autoconfigure.security.SecurityProperties,org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration,objectPostProcessor,org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration,authenticationManagerBuilder,enableGlobalAuthenticationAutowiredConfigurer,initializeUserDetailsBeanManagerConfigurer,initializeAuthenticationProviderBeanManagerConfigurer,org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration,delegatingApplicationListener,webSecurityExpressionHandler,springSecurityFilterChain,privilegeEvaluator,conversionServicePostProcessor,autowiredWebSecurityConfigurersIgnoreParents,org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration,requestDataValueProcessor,org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration,org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration.httpSecurity,org.springframework.boot.autoconfigure.security.servlet.WebSecurityEnablerConfiguration,org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration,authenticationEventPublisher,org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration,securityFilterChainRegistration,org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration,inMemoryUserDetailsManager,org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration,scheduledBeanLazyInitializationExcludeFilter,taskSchedulerBuilder,spring.task.scheduling-org.springframework.boot.autoconfigure.task.TaskSchedulingProperties,org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration,platformTransactionManagerCustomizers,spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties,org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration,nettyWebServerFactoryCustomizer,org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration,tomcatWebServerFactoryCustomizer,org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration,org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorConfiguration$ReactorNetty,reactorClientResourceFactory,reactorClientHttpConnector,org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration,clientConnectorCustomizer,org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration,exchangeStrategiesCustomizer,org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration,webClientBuilder,org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration,characterEncodingFilter,localeCharsetMappingsCustomizer,org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration,multipartConfigElement,multipartResolver,spring.servlet.multipart-org.springframework.boot.autoconfigure.web.servlet.MultipartProperties,org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration,configurationPropertiesBeans,configurationPropertiesRebinder,org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration$RefreshEndpointConfiguration,org.springframework.cloud.autoconfigure.RestartEndpointWithoutIntegrationConfiguration,org.springframework.cloud.autoconfigure.PauseResumeEndpointsConfiguration,org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration,refreshScopeHealthIndicator,org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration,compositeDiscoveryClient,org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration,simpleDiscoveryProperties,simpleDiscoveryClient,org.springframework.cloud.client.CommonsClientAutoConfiguration$ActuatorConfiguration,org.springframework.cloud.client.CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration,discoveryClientHealthIndicator,discoveryCompositeHealthContributor,commonsFeatures,spring.cloud.discovery.client.health-indicator-org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties,org.springframework.cloud.client.CommonsClientAutoConfiguration,org.springframework.cloud.client.discovery.composite.reactive.ReactiveCompositeDiscoveryClientAutoConfiguration,reactiveCompositeDiscoveryClient,org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClientAutoConfiguration$HealthConfiguration,simpleReactiveDiscoveryClientHealthIndicator,org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClientAutoConfiguration,simpleReactiveDiscoveryProperties,simpleReactiveDiscoveryClient,org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration$ReactiveDiscoveryLoadBalancerConfiguration,reactiveDiscoveryClients,reactiveCommonsFeatures,org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration,org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration,zoneConfig,loadBalancerClientFactory,default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification,spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerProperties,org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig,loadBalancedRetryFactory,org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration,blockingLoadBalancerClient,default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification,org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig,asyncLoadBalancerInterceptor,asyncRestTemplateCustomizer,org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration$AsyncRestTemplateCustomizerConfig,loadBalancedAsyncRestTemplateInitializer,org.springframework.cloud.client.loadbalancer.AsyncLoadBalancerAutoConfiguration,org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration,loadBalancerInterceptor,restTemplateCustomizer,org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryAutoConfiguration,org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration,loadBalancedRestTemplateInitializerDeprecated,loadBalancerRequestFactory,org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig,reactorDeferringLoadBalancerExchangeFilterFunction,org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration,loadBalancerWebClientBuilderBeanPostProcessor,org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration,loadBalancerExchangeFilterFunction,org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration,spring.cloud.service-registry.auto-registration-org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties,org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration,org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration,org.springframework.cloud.commons.httpclient.HttpClientConfiguration$OkHttpClientConfiguration,connPoolFactory,okHttpClientBuilder,okHttpClientFactory,org.springframework.cloud.commons.httpclient.HttpClientConfiguration$ApacheHttpClientConfiguration,connManFactory,apacheHttpClientBuilder,apacheHttpClientFactory,org.springframework.cloud.commons.httpclient.HttpClientConfiguration,org.springframework.cloud.commons.util.UtilAutoConfiguration,inetUtilsProperties,inetUtils,org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration,compositeCompatibilityVerifier,springBootVersionVerifier,spring.cloud.compatibility-verifier-org.springframework.cloud.configuration.CompatibilityVerifierProperties,org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCacheManagerWarnConfiguration,caffeineWarnLogger,org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration,spring.cloud.loadbalancer.cache-org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties,org.springframework.cloud.openfeign.clientconfig.HttpClientFeignConfiguration,connectionManager,httpClient,org.springframework.cloud.openfeign.loadbalancer.HttpClientFeignLoadBalancerConfiguration,feignRetryClient,org.springframework.cloud.openfeign.loadbalancer.DefaultFeignLoadBalancerConfiguration,org.springframework.cloud.openfeign.loadbalancer.FeignLoadBalancerAutoConfiguration,feign.httpclient-org.springframework.cloud.openfeign.support.FeignHttpClientProperties,org.springframework.cloud.openfeign.FeignAutoConfiguration$DefaultFeignTargeterConfiguration,feignTargeter,org.springframework.cloud.openfeign.FeignAutoConfiguration,feignFeature,feignContext,feign.encoder-org.springframework.cloud.openfeign.support.FeignEncoderProperties,feign.client-org.springframework.cloud.openfeign.FeignClientProperties,org.springframework.cloud.openfeign.hateoas.FeignHalAutoConfiguration,org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration,servletEndpointRegistrar,org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration,servletExposeExcludePropertyEndpointFilter,org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration,webEndpointServletHandlerMapping,controllerEndpointHandlerMapping,management.endpoints.web.cors-org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties,org.springframework.boot.actuate.autoconfigure.security.servlet.SecurityRequestMatchersManagementContextConfiguration$MvcRequestMatcherConfiguration,requestMatcherProvider,org.springframework.boot.actuate.autoconfigure.security.servlet.SecurityRequestMatchersManagementContextConfiguration,org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration,org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration,org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration,management.server-org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties]; root of factory hierarchy, fallback=void, fallbackFactory=void}connectTimeoutMillis=10000}readTimeoutMillis=60000}followRedirects=truerefreshableClient=false}
				.getBeanDefinition(BEAN_NAME_PREFIX + "TestFeignClient")
				.getAttribute("feignClientsRegistrarFactoryBean");
		Feign.Builder builder = factoryBean.feign(context);

		List<RequestInterceptor> interceptors = (List) getBuilderValue(builder, "requestInterceptors");
		assertThat(interceptors.size()).as("interceptors not set").isEqualTo(3);
		assertThat(getBuilderValue(builder, "logLevel")).as("log level not set").isEqualTo(Logger.Level.FULL);

		List<Capability> capabilities = (List) getBuilderValue(builder, "capabilities");
		assertThat(capabilities).hasSize(2).hasAtLeastOneElementOfType(NoOpCapability.class)
				.hasAtLeastOneElementOfType(MicrometerCapability.class);
	}

	private Object getBuilderValue(Feign.Builder builder, String member) {
		Field builderField = ReflectionUtils.findField(Feign.Builder.class, member);
		ReflectionUtils.makeAccessible(builderField);

		return ReflectionUtils.getField(builderField, builder);
	}

	@Test
	public void testNoInheritFeignClient() {
		FeignClientFactoryBean factoryBean = (FeignClientFactoryBean) beanFactory
				.getBeanDefinition(BEAN_NAME_PREFIX + "NoInheritFeignClient")
				.getAttribute("feignClientsRegistrarFactoryBean");
		Feign.Builder builder = factoryBean.feign(context);

		List<RequestInterceptor> interceptors = (List) getBuilderValue(builder, "requestInterceptors");
		assertThat(interceptors).as("interceptors not set").isEmpty();
		assertThat(factoryBean.isInheritParentContext()).as("is inheriting from parent configuration").isFalse();

		List<Capability> capabilities = (List) getBuilderValue(builder, "capabilities");
		assertThat(capabilities).hasSize(2).hasAtLeastOneElementOfType(NoOpCapability.class)
				.hasAtLeastOneElementOfType(MicrometerCapability.class);
	}

	@Test
	public void testNoInheritFeignClient_ignoreProperties() {
		FeignClientFactoryBean factoryBean = (FeignClientFactoryBean) beanFactory
				.getBeanDefinition(BEAN_NAME_PREFIX + "NoInheritFeignClient")
				.getAttribute("feignClientsRegistrarFactoryBean");
		Feign.Builder builder = factoryBean.feign(context);

		assertThat(getBuilderValue(builder, "logLevel")).as("log level not set").isEqualTo(Logger.Level.HEADERS);

		List<Capability> capabilities = (List) getBuilderValue(builder, "capabilities");
		assertThat(capabilities).hasSize(2).hasAtLeastOneElementOfType(NoOpCapability.class)
				.hasAtLeastOneElementOfType(MicrometerCapability.class);
	}

	@EnableAutoConfiguration
	@Configuration(proxyBeanMethods = false)
	@EnableFeignClients(clients = { TestFeignClient.class, NoInheritFeignClient.class })
	protected static class Application {

		@Bean
		public RequestInterceptor requestInterceptor() {
			return new RequestInterceptor() {
				@Override
				public void apply(RequestTemplate requestTemplate) {
					System.out.println("-----------");
				}
			};
		}

		@Bean
		public NoOpCapability noOpCapability() {
			return new NoOpCapability();
		}

	}

	public static class NoInheritConfiguration {

		@Bean
		public Logger.Level logLevel() {
			return Logger.Level.HEADERS;
		}

		@Bean
		public NoOpCapability noOpCapability() {
			return new NoOpCapability();
		}

		@Bean
		public FeignClientConfigurer feignClientConfigurer() {
			return new FeignClientConfigurer() {

				@Override
				public boolean inheritParentConfiguration() {
					return false;
				}
			};

		}

	}

	@FeignClient("testFeignClient")
	interface TestFeignClient {

	}

	@FeignClient(name = "noInheritFeignClient", configuration = NoInheritConfiguration.class)
	interface NoInheritFeignClient {

	}

	private static class NoOpCapability implements Capability {

	}

}
